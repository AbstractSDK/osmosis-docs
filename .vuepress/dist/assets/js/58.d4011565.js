(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{501:function(e,s,t){"use strict";t.r(s);var i=t(8),o=Object(i.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"registration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#registration"}},[e._v("#")]),e._v(" Registration")]),e._v(" "),t("h2",{attrs:{id:"how-to-register-onto-the-cosmos-chain-registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-register-onto-the-cosmos-chain-registry"}},[e._v("#")]),e._v(" How to Register onto the Cosmos Chain Registry")]),e._v(" "),t("h3",{attrs:{id:"purpose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#purpose"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),t("p",[e._v("The Cosmos Chain Registry is used as a single source of truth and is used to look up chain and asset data")]),e._v(" "),t("h3",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[e._v("Registered to "),t("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0173.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP173"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("See: "),t("a",{attrs:{href:"..."}},[e._v("How to register a bech32 prefix onto SLIP173")])])])]),e._v(" "),t("li",[e._v("Registered to "),t("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP44"),t("OutboundLink")],1),e._v(" (if coin type is not like ATOM)\n"),t("ul",[t("li",[e._v("Note: Coin Type 118 represents the Cosmos Hub's ATOM token, registered listed in "),t("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP44"),t("OutboundLink")],1),e._v("; many projects also default to using this coin type, while some have registered their own.")])])]),e._v(" "),t("li",[e._v("Chain added to Mintscan (optional)\n"),t("ul",[t("li",[e._v("See: "),t("a",{attrs:{href:"..."}},[e._v("How to add a chain to Mintscan")])])])]),e._v(" "),t("li",[e._v("Assets listed on CoinGecko (optional)\n"),t("ul",[t("li",[e._v("See: "),t("a",{attrs:{href:"..."}},[e._v("How to enlist assets onto CoinGecko")])])])])]),e._v(" "),t("h3",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("ul",[t("li",[e._v("Chain data--metadata, locations, network addresses, etc.")]),e._v(" "),t("li",[e._v("Asset data--metadata, such as name, symbol, minimal denomination, decimal precision, etc.\n"),t("ul",[t("li",[e._v("CoinGecko ID\n"),t("ul",[t("li",[e._v("Refer to the latest "),t("a",{attrs:{href:"https://api.coingecko.com/api/v3/coins/list",target:"_blank",rel:"noopener noreferrer"}},[e._v("CoinGecko Coins List"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[e._v("Basic understanding of GitHub, knowing how to fork a repository, create a branch, commit changes, and submit a Pull Request")])]),e._v(" "),t("h3",{attrs:{id:"steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[e._v("#")]),e._v(" Steps")]),e._v(" "),t("ol",[t("li",[e._v("Review the "),t("a",{attrs:{href:"https://github.com/cosmos/chain-registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos Chain Registry"),t("OutboundLink")],1),e._v(" docs:\n"),t("ol",[t("li",[t("a",{attrs:{href:"https://github.com/cosmos/chain-registry/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("README.md"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosmos/chain-registry/blob/master/chain.schema.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("chain.schema.json"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosmos/chain-registry/blob/master/assetlist.schema.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("assetlist.schema.json"),t("OutboundLink")],1)])]),e._v(" "),t("ul",[t("li",[e._v("Note: It is recommended to refer to another registration to serve as an example, such as "),t("a",{attrs:{href:"https://github.com/cosmos/chain-registry/blob/master/osmosis/chain.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("Osmosis' registration"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("Submit a pull request with necessary changes to the following:\n"),t("ul",[t("li",[t("code",[e._v("chain.json")]),e._v(":\n"),t("ul",[t("li",[e._v("Be sure to include "),t("code",[e._v("bech32_prefix")]),e._v(" "),t("ul",[t("li",[e._v("e.g., "),t("code",[e._v('"bech32_prefix": "cosmos",')])])])]),e._v(" "),t("li",[e._v("Be sure to include "),t("code",[e._v("slip44")]),e._v(" (coin type)\n"),t("ul",[t("li",[e._v("e.g., "),t("code",[e._v('"slip44": 118,')])])])]),e._v(" "),t("li",[e._v("Be sure to include at least one RPC and one REST under "),t("code",[e._v("apis")])]),e._v(" "),t("li",[e._v("For explorers, opt for Mintscan, if available")])])]),e._v(" "),t("li",[t("code",[e._v("assetlists.json")]),e._v(":\n"),t("ul",[t("li",[e._v("The "),t("code",[e._v("name")]),e._v(" of an asset refers to how the asset should be called in persoanl communication, while "),t("code",[e._v("symbol")]),e._v(" is like a stock ticker, typically in ALL CAPS, and these values may differ.\n"),t("ul",[t("li",[e._v("e.g., "),t("code",[e._v('"name": graviton, "display": "graviton", "symbol": "GRAV"')])])])]),e._v(" "),t("li",[e._v("Be sure to include the CoinGecko ID for each asset where one exists\n"),t("ul",[t("li",[e._v("e.g., "),t("code",[e._v('"coingecko_id": "cosmos"')])])])])])])])])]),e._v(" "),t("h2",{attrs:{id:"how-to-register-an-asset-onto-the-osmosis-assetlists-registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-register-an-asset-onto-the-osmosis-assetlists-registry"}},[e._v("#")]),e._v(" How to Register an Asset onto the Osmosis Assetlists Registry")]),e._v(" "),t("h3",{attrs:{id:"purpose-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#purpose-2"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),t("p",[e._v("The Osmosis Assetlists Registry is used as a local source of truth for assets displayed on Osmosis' front end.")]),e._v(" "),t("h3",{attrs:{id:"prerequisites-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-2"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[e._v("Registered onto the Cosmos Chain Registry\n"),t("ul",[t("li",[e._v("See: "),t("a",{attrs:{href:"..."}},[e._v("How to register onto the Cosmos Chain Registry")])])])]),e._v(" "),t("li",[e._v("Opened IBC connection between the source chain and Osmosis\n"),t("ul",[t("li",[e._v("Selected a sole desigate IBC connection between the registering chain and Osmosis for this asset\n"),t("ul",[t("li",[e._v("All native assets from a chain should go through a single connection, but CW20 tokens can be sent through another connection")])])])])]),e._v(" "),t("li",[e._v("Assets listed on CoinGecko (optional)\n"),t("ul",[t("li",[e._v("See: "),t("a",{attrs:{href:"..."}},[e._v("How to enlist assets onto CoinGecko")])])])])]),e._v(" "),t("h3",{attrs:{id:"requirements-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements-2"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("ul",[t("li",[e._v("Designate IBC Connection details:\n"),t("ul",[t("li",[e._v("Source channel (Osmosis' channel to the registering chain)")]),e._v(" "),t("li",[e._v("Destination channel (Registering chain's channel to Osmosis)")])])]),e._v(" "),t("li",[e._v("Asset data:\n"),t("ul",[t("li",[e._v('IBC denomination (when the asset is transferred to Osmosis, the base denomination looks like "ibc/...")\n'),t("ul",[t("li",[e._v("E.g., For ATOM: "),t("code",[e._v('"base": "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",')])])])]),e._v(" "),t("li",[e._v("Name, symbol, exponent, etc.")]),e._v(" "),t("li",[e._v("CoinGecko ID (optional, but should be included if and when there is one)\n"),t("ul",[t("li",[e._v("Refer to the latest "),t("a",{attrs:{href:"https://api.coingecko.com/api/v3/coins/list",target:"_blank",rel:"noopener noreferrer"}},[e._v("CoinGecko Coins List"),t("OutboundLink")],1)])])])])]),e._v(" "),t("li",[e._v("Token Logo Image files (both .png and .svg is recommended)\n"),t("ul",[t("li",[e._v("Note: Currently, a .png is required to be able to render on "),t("a",{attrs:{href:"info.osmosis.zone"}},[e._v("info.osmosis.zone")])])])]),e._v(" "),t("li",[e._v("Basic understanding of GitHub, knowing how to fork a respository, create a branch, commit changes, and submit a Pull Request")])]),e._v(" "),t("h3",{attrs:{id:"steps-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps-2"}},[e._v("#")]),e._v(" Steps")]),e._v(" "),t("ol",[t("li",[e._v("Review the "),t("a",{attrs:{href:"https://github.com/osmosis-labs/assetlists",target:"_blank",rel:"noopener noreferrer"}},[e._v("Osmosis Assetlists Registry"),t("OutboundLink")],1),e._v(" docs:\n"),t("ol",[t("li",[t("a",{attrs:{href:"https://github.com/osmosis-labs/assetlists/blob/main/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("README.md"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osmosis-labs/assetlists/blob/main/assetlist.schema.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("assetlist.schema.json"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[e._v("Submit a pull request with necessary changes to the following:\n"),t("ul",[t("li",[t("code",[e._v("osmosis-1/osmosis-1.assetlist.json")]),e._v(":\n"),t("ul",[t("li",[e._v("Be sure to include the CoinGecko ID if one exists")])])]),e._v(" "),t("li",[t("code",[e._v("images/")]),e._v(" "),t("ul",[t("li",[e._v("Add token logo images")])])])])])]),e._v(" "),t("h2",{attrs:{id:"how-to-register-a-bech32-prefix-onto-slip173"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-register-a-bech32-prefix-onto-slip173"}},[e._v("#")]),e._v(" How to Register a bech32 Prefix onto SLIP173")]),e._v(" "),t("h3",{attrs:{id:"purpose-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#purpose-3"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),t("p",[e._v("CosmosSDK Chain addresses can be represented with a chain-specific string preceding a hash, which helps identify to which chain an address belongs. They are registered on "),t("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0173.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP173"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"prerequisites-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-3"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[e._v("Chain configured to use bech32 prefixes in wallet addresses\n"),t("ul",[t("li",[e._v("Note: A bech32 prefix may still be registered, even before the chain is configured to use the prefixes, but only if the configuration will happen soon.")])])])]),e._v(" "),t("h3",{attrs:{id:"requirements-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements-3"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("ul",[t("li",[e._v("Chain data:\n"),t("ul",[t("li",[e._v("Chain name")]),e._v(" "),t("li",[e._v("Chain website")]),e._v(" "),t("li",[e._v("bech32 prefix(es)\n"),t("ul",[t("li",[e._v("Mainnet")]),e._v(" "),t("li",[e._v("Testnet (optional)")]),e._v(" "),t("li",[e._v("Regtest (optional)")]),e._v(" "),t("li",[e._v("Note: The bech32 prefix must be unique among all registered prefixes. E.g., a new mainnet prefix cannot match a prefix already registered as a testnet prefix.")])])])])]),e._v(" "),t("li",[e._v("Basic understanding of GitHub, knowing how to fork, create a branch, commit changes, and submit a Pull Request")])]),e._v(" "),t("h3",{attrs:{id:"steps-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps-3"}},[e._v("#")]),e._v(" Steps")]),e._v(" "),t("ol",[t("li",[e._v("Review the "),t("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0173.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP173 Registry"),t("OutboundLink")],1),e._v(":")]),e._v(" "),t("li",[e._v("Submit a pull request with necessary changes to the following:\n"),t("ul",[t("li",[t("code",[e._v("slip-0173.md")]),e._v(":\n"),t("ul",[t("li",[e._v("Add the chain name (as a link to the website) and prefix(es) into the "),t("em",[e._v("Registered human-readable parts")]),e._v(" table")])])])])])])])}),[],!1,null,null,null);s.default=o.exports}}]);